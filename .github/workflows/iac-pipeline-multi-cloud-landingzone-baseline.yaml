name: Multi-Cloud Landing Zone Baseline

on:
  workflow_dispatch:
    inputs:
      deploy_action:
        description: "Deployment action to execute"
        type: choice
        options:
          - init
          - create
          - migrate
          - upgrade
          - backup
          - restore
          - destroy
        default: upgrade
      deploy_dry_run:
        description: "Run deployment steps in dry-run mode"
        type: choice
        options:
          - 'true'
          - 'false'
        default: 'true'

jobs:
  preview_alicloud:
    name: Preview baseline workflow (Alicloud)
    uses: ./.github/workflows/iac-pipeline-alicloud-landingzone-baseline.yaml
    with:
      deploy_action: output
      deploy_dry_run: ${{ inputs.deploy_dry_run }}
      config_path: config/alicloud/
    secrets: inherit

  preview_aws:
    name: Preview baseline workflow (AWS)
    uses: ./.github/workflows/iac-pipeline-aws-global-landingzone-baseline.yaml
    with:
      deploy_action: output
      deploy_dry_run: ${{ inputs.deploy_dry_run }}
      config_path: config/aws-global/
    secrets: inherit

  preview_vultr:
    name: Preview baseline workflow (Vultr)
    uses: ./.github/workflows/iac-pipeline-vultr-landingzone-baseline.yaml
    with:
      deploy_action: output
      deploy_dry_run: ${{ inputs.deploy_dry_run }}
      config_path: config/vultr/
    secrets: inherit

  apply:
    name: Apply baseline via Pulumi (${{ matrix.provider }})
    needs:
      - preview_alicloud
      - preview_aws
      - preview_vultr
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - provider: AWS
            stack: svc-design/aws-lz-us-east-1-dev
            region: us-east-1
          - provider: Alicloud
            stack: svc-design/alicloud-lz-cn-hangzhou-dev
            region: cn-hangzhou
          - provider: Vultr
            stack: svc-design/vultr-lz-global-dev
            region: global
    steps:
      - name: Apply baseline via Pulumi
        run: pulumi up --stack ${{ matrix.stack }} --yes
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
          VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}

  validation:
    name: Validate baseline readiness (${{ matrix.provider }})
    needs: apply
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - provider: Alicloud
            config: config/alicloud/
            pulumi_dir: iac_modules/pulumi
          - provider: AWS
            config: config/aws-global/
            pulumi_dir: iac_modules/pulumi
          - provider: Vultr
            config: config/vultr/
            pulumi_dir: iac_modules/pulumi
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run baseline validation checks
        run: scripts/validation/validate-baseline.sh "${{ matrix.provider }}" "${{ matrix.config }}" "${{ matrix.pulumi_dir }}"

  delivery:
    name: Deliver baseline rollout notifications
    needs: validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Notify stakeholders
        run: scripts/notifications/notify-baseline-delivery.sh

